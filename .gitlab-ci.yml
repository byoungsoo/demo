image: docker:stable
variables:
  DOCKER_DRIVER: overlay2
  #Application
  APP_NAME: board
  APPLICATION_NS: smp
  APPLICATION_PORT: 8080
  
  # AWS 
  AWS_REGION: "ap-northeast-2"
  REGISTRY_URL: 718652001716.dkr.ecr.ap-northeast-2.amazonaws.com
 
stages:
  - build
  - package
  - deploy
  - deploycheck
  - rollback

maven-build:
  image: maven:3.8.1-openjdk-11
  stage: build
  script:

    # Build
    - mvn package

  artifacts:
    when: always
    paths:
      - target/
    expire_in: 1 days

  only:
    - develop
    - stage
    - master


.chceck_repo:
  script:
    
    - $(aws ecr get-login --no-include-email --region ${AWS_REGION})
    - export IS_REPO=`aws ecr describe-repositories --region ${AWS_REGION} --query "repositories[].repositoryName" | grep ${APP_NAME} | wc -l`

    - >
     if [ "$IS_REPO" == "0" ]; then
       aws ecr create-repository --repository-name ${APP_NAME} --region ${AWS_REGION}
     fi



docker-build:
  stage: package
  script:

    # Change Variables
    - sed -i "s/<APP_NAME>/${APP_NAME}/g" Dockerfile
    - sed -i "s/<APP_NAME>/${APP_NAME}/g" cicd/tomcat/server.xml

    - *chceck_repo
  
    ### Docker Build
    - docker build -t ${APP_NAME}:${CI_COMMIT_SHORT_SHA} .

    ### Docker Push into ECR
    - docker tag ${APP_NAME}:${CI_COMMIT_SHORT_SHA} ${REGISTRY_URL}/${APP_NAME}:${CI_COMMIT_SHORT_SHA}
    - docker push ${REGISTRY_URL}/${APP_NAME}:${CI_COMMIT_SHORT_SHA}

    - docker tag ${APP_NAME}:${CI_COMMIT_SHORT_SHA} ${REGISTRY_URL}/${APP_NAME}:latest
    - docker push ${REGISTRY_URL}/${APP_NAME}:latest

    ### Docker Delete Images
    - docker rmi ${APP_NAME}:${CI_COMMIT_SHORT_SHA}
    - docker rmi ${REGISTRY_URL}/${APP_NAME}:${CI_COMMIT_SHORT_SHA}
    - docker rmi ${REGISTRY_URL}/${APP_NAME}:latest

  only:
    - develop
    - stage
    - master


# Deploy
deploy:
  stage: deploy
  image: ${REGISTRY_URL}/common/helm-deploy:latest
  script:
    
    - sed -i "s/<REGISTRY_URL>/${APP_NAME}/g" helm/values.yaml
    - sed -i "s/<APP_NAME>/${APP_NAME}/g" helm/values.yaml
    - sed -i "s/<CI_COMMIT_SHORT_SHA>/${CI_COMMIT_SHORT_SHA}/g" helm/values.yaml

    - sed -i "s/<APP_NAME>/${APP_NAME}/g" helm/Chart.yaml
    
    - helm upgrade -i --debug ${APP_NAME} ./helm/ -f ./helm/values.yaml
     -n ${APPLICATION_NS}
     
  only:
    - develop
    - stage
    - master

# Deploy-Check 
deploycheck:
  stage: deploycheck
  image: ${REGISTRY_URL}/common/helm-deploy:latest
  script:
    
    # Check Status
    - kubectl rollout status deployment ${APP_NAME} -n ${APPLICATION_NS}

  only:
    - develop
    - stage
    - master


# Deploy-Check 
rollback:
  stage: deploycheck
  when: manual
  image: ${REGISTRY_URL}/common/helm-deploy:latest
  script:
    
    ## Deploy Backup
    - helm upgrade -i --debug --set image.tag=${APP_NAME}-backup ${APP_NAME} ./helm/ -f ./helm/${HELM_VALUES_FILE}
     -n ${APPLICATION_NS}
  
  only:
    - develop
    - stage
    - master